@model RecupereJa.ViewModel.PerfilUsuarioViewModel

@{
    Layout = null;

}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <title>Perfil - Recupere Já</title>
    <style>
        * {
            box-sizing: border-box;
        }

        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(to bottom right, #d0eaff, #0077cc);
        }

        .wrapper {
            display: flex;
            justify-content: center;
            padding: 40px 20px;
        }

        .container {
            background-color: white;
            padding: 30px;
            border-radius: 12px;
            max-width: 1000px;
            width: 100%;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        header {
            text-align: center;
            margin-bottom: 25px;
        }

            header h2 {
                margin: 0;
                color: #0066cc;
            }

        .profile-section {
            display: flex;
            align-items: center;
            justify-content: flex-start;
            max-width: 600px;
            margin: 0 auto 30px auto;
            gap: 30px;
            padding: 0 10px;
        }

        .profile-pic {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid #0066cc;
            position: relative;
            left: -50px;
        }

        .profile-info {
            flex: 1;
        }

            .profile-info p {
                margin: 6px 0;
                font-size: 1em;
            }

        .products-section {
            margin-top: 20px;
        }

            .products-section h3 {
                margin-bottom: 15px;
                color: #0066cc;
            }

        .no-products {
            font-size: 1em;
            color: #555;
            text-align: center;
            margin-top: 20px;
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
            gap: 20px;
        }

        .product-card {
            position: relative;
            background: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
        }

            .product-card img {
                width: 100%;
                height: 140px;
                object-fit: cover;
                border-radius: 8px;
                margin-bottom: 10px;
            }

            .product-card h4 {
                margin: 5px 0;
                font-size: 1em;
                color: #333;
            }

        .delete-icon {
            position: absolute;
            top: 8px;
            right: 8px;
            background: red;
            color: white;
            border: none;
            border-radius: 50%;
            width: 28px;
            height: 28px;
            cursor: pointer;
            font-weight: bold;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: white;
            padding: 20px;
            border-radius: 10px;
            max-width: 400px;
            width: 90%;
            text-align: center;
        }

        .modal-buttons {
            margin-top: 20px;
            display: flex;
            justify-content: space-around;
        }

            .modal-buttons button {
                padding: 10px 20px;
                border: none;
                border-radius: 6px;
                cursor: pointer;
                font-size: 1em;
            }

            .modal-buttons .yes {
                background: red;
                color: white;
            }

            .modal-buttons .no {
                background: #ccc;
            }
    </style>
</head>
<body>
    <div class="wrapper">
        <div class="container">
            <header>
                <h2><b>Meu Perfil</b></h2>
            </header>

            <!-- Seção Perfil -->
            <div class="profile-section">
                <img src="assets/steve.jpg" alt="Foto de Perfil" class="profile-pic">
                <div class="profile-info">
                    <p><strong>Nome Completo:</strong></p>
                    <p><strong>Nome de Usuário:</strong></p>
                    <p><strong>Telefone:</strong></p>
                    <p><strong>Email:</strong></p>
                    <p><strong>Localização:</strong></p>
                </div>
            </div>

            <!-- Produtos -->
            <div class="products-section">
                <h3>Meus Itens</h3>

                @if (Model.Itens == null || !Model.Itens.Any())
                {
                    <div class="no-products">Você não tem nenhum item cadastrado.</div>
                }
                else
                {
                    <div class="products-grid">
                        @foreach (var item in Model.Itens)
                        {
                            <div class="product-card">
                                <img src="https://via.placeholder.com/300x140.png?text=Item+@item.Id" alt="Imagem do item">
                                <h4>@item.Titulo</h4>
                                <p>@(item.Descricao ?? "Sem descrição")</p>
                                <p><strong>Status:</strong> @(item.Status ? "Resolvido" : "Pendente")</p>
                                <p><strong>Data:</strong> @item.DataCriacao.ToLocalTime().ToString("dd/MM/yyyy")</p>
                                <a class="btn btn-primary" href="/Item/Details/@item.Id">Ver Detalhes</a>
                            </div>
                        }
                    </div>
                }
            </div>

        </div>
    </div>

    <!-- Modal de exclusão -->
    <div class="modal" id="deleteModal">
        <div class="modal-content">
            <h3>Excluir produto</h3>
            <p>Tem certeza que deseja excluir este produto?</p>
            <div class="modal-buttons">
                <button class="no" onclick="closeModal()">Não</button>
                <button class="yes" onclick="confirmDelete()">Sim</button>
            </div>
        </div>
    </div>

    <script>
                let productToDelete = null;
                const products = []; // lista simulada

                const productsGrid = document.getElementById("productsGrid");
                const noProducts = document.getElementById("noProducts");

                const renderProducts = () => {
                  productsGrid.innerHTML = "";
                  if (products.length === 0) {
                    noProducts.style.display = "block";
                  } else {
                    noProducts.style.display = "none";
                    products.forEach(p => {
                      const card = document.createElement("div");
                      card.classList.add("product-card");
                      card.innerHTML = `
                        <img src="${p.image}" alt="${p.name}">
                        <h4>${p.name}</h4>
                        <button class="delete-icon" onclick="openModal('${p.id}')">×</button>
                      `;
                      productsGrid.appendChild(card);
                    });
                  }
                };

                const openModal = (productId) => {
                  productToDelete = productId;
                  document.getElementById("deleteModal").style.display = "flex";
                };

                const closeModal = () => {
                  productToDelete = null;
                  document.getElementById("deleteModal").style.display = "none";
                };

                const confirmDelete = () => {
                  if (productToDelete) {
                    console.log("Excluir produto ID:", productToDelete);
                    closeModal();
                  }
                };

        <form asp-action="Perfil" asp-controller="Usuario" method="post" enctype="multipart/form-data">

        <div class="profile-container row">

            <!-- Sidebar de visualização -->
            <div class="col-md-4 sidebar">
                <div class="text-center">
        @if (Model?.FotoPerfilUrl != null && Model?.FotoPerfilUrl.Length > 0)
        {
                            <img id="FotoDePerfil" src="data:image/*;base64,@(Convert.ToBase64String(Model.FotoPerfilUrl))" class="profile-photo" alt="Profile Photo" />
        }
        else
        {
                            <img id="FotoDePerfil" src="@Model?.FotoPerfilUrl" class="profile-photo" alt="Profile Photo" />
        }

                    <!-- Novo formulário de upload -->
                    <form asp-action="AlterarImagem" asp-controller="Usuario" method="post" enctype="multipart/form-data">
                        <input type="hidden" name="usuarioId" value="@Model?.Id" />
                        <div>
                            <label for="formFile">Alterar foto de perfil:</label>
                            <input type="file" id="formFile" name="formFile"
                                   accept=".png,.jpg,.jpeg,.gif,.tif"
                                   class="form-control"
                                   style="border:0px!important;padding: 0px;padding-top: 10px;padding-bottom: 30px;" />
                        </div>
                        <button type="submit" class="btn btn-primary">Enviar</button>
                    </form>
                </div>

                <h2>@Model?.Nome</h2>
                <p>@Model?.Genero</p>
                <p>@Model?.Cidade</p>
                <p class="rating">⭐ @Model?.Rating</p>
                <p>@Model?.DataNascimentoFormatada</p>

                <div class="contact-info">
                    <p>Telefone: <a href="tel:@Model?.Telefone">@Model?.Telefone</a></p>
                    <p>E-mail: <a href="mailto:@Model?.Email">@Model?.Email</a></p>
                </div>
            </div>

            <!-- Campos de edição -->
            <div class="col-md-8">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="Nome"></label>
                    <input asp-for="Nome" class="form-control" />
                    <span asp-validation-for="Nome" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Telefone"></label>
                    <input asp-for="Telefone" class="form-control" />
                    <span asp-validation-for="Telefone" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary">Salvar</button>
            </div>
        </div>

        </form>

        <script>

            function AlterarImagem (){
                    const imagem = document.getElementsByName('FotoDePerfil')[0].files[0];

                document.getElementById('FotoDePerfil').src = window.URL.createObjectURL(imagem)



                // Cria um FormData para enviar a imagem e o ID
                const formData = new FormData();
                formData.append('id', '34');            // Adiciona o ID
                formData.append('imagem', imagem);    // Adiciona a imagem

                // Realiza o fetch para o endpoint
                fetch('./AlterarImagem', {
                    method: 'POST',                // Envio de dados via POST
                    body: formData,                // Envia o FormData com os dados
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erro ao enviar a imagem');
                    }
                    return response.json();  // Supondo que o backend retorne um JSON
                })
                .then(data => {
                    console.log('Imagem alterada com sucesso:', data);
                    // Aqui você pode manipular a resposta de sucesso
                })
                .catch(error => {
                    console.error('Erro:', error);
                    // Aqui você pode tratar os erros
                });
            }
    </script>
    <form>
    </form>
</body>
</html>