@model RecupereJa.ViewModel.PerfilUsuarioViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <title>Perfil - Recupere Já</title>
    <style>
        /* estilos mantidos */
        * {
            box-sizing: border-box;
        }

        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(to bottom right,#d0eaff,#0077cc);
        }

        .wrapper {
            display: flex;
            justify-content: center;
            padding: 40px 20px;
        }

        .container {
            background: white;
            padding: 30px;
            border-radius: 12px;
            max-width: 1000px;
            width: 100%;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        header {
            text-align: center;
            margin-bottom: 25px;
        }

            header h2 {
                margin: 0;
                color: #0066cc;
            }

        .profile-section {
            display: flex;
            align-items: center;
            justify-content: flex-start;
            max-width: 600px;
            margin: 0 auto 30px auto;
            gap: 30px;
            padding: 0 10px;
        }

        .profile-pic {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid #0066cc;
        }

        .profile-info {
            flex: 1;
        }

            .profile-info .mb-3 {
                margin-bottom: 12px;
            }

            .profile-info label {
                font-weight: bold;
                display: block;
                margin-bottom: 4px;
            }

            .profile-info input {
                width: 100%;
                padding: 6px 8px;
                border-radius: 6px;
                border: 1px solid #ccc;
            }

        .products-section h3 {
            margin-bottom: 15px;
            color: #0066cc;
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill,minmax(220px,1fr));
            gap: 20px;
        }

        .product-card {
            position: relative;
            background: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
        }

            .product-card img {
                width: 100%;
                height: 140px;
                object-fit: cover;
                border-radius: 8px;
                margin-bottom: 10px;
            }
    </style>
</head>
<body>
    <div class="wrapper">
        <div class="container">
            <header>
                <h2><b>Meu Perfil</b></h2>
            </header>

            <form id="formPerfil" enctype="multipart/form-data">
                <input type="hidden" name="usuarioId" value="@Model.Usuario.Id" />

                <div class="profile-section">
                    <img id="FotoDePerfil"
                         src="@(
                         Model.Usuario.FotoUsuario != null && Model.Usuario.FotoUsuario.Length > 0
                         ? "data:image/png;base64," + Convert.ToBase64String(Model.Usuario.FotoUsuario)
                         : "/images/users/default.png"
                     )"
                         class="profile-pic"
                         alt="Foto de Perfil">

                    <div class="profile-info">
                        <div class="mb-3">
                            <label>Nome Completo</label>
                            <input type="text" name="nome" value="@Model.Usuario.Nome" required />
                        </div>
                        <div class="mb-3">
                            <label>Email</label>
                            <input type="email" name="email" value="@Model.Usuario.Email" required />
                        </div>
                        <div class="mb-3">
                            <label>Telefone</label>
                            <input type="text" name="telefone" value="@(Model.Usuario.Telefone ?? "")" />
                        </div>
                        <div class="mb-3">
                            <label>Alterar Foto (PNG ou JPEG)</label>
                            <input type="file" name="formFile" accept=".png,.jpg,.jpeg" onchange="previewImage(this)" />
                        </div>
                    </div>
                </div>

                <button type="button" class="btn btn-primary" onclick="salvarPerfil()">Salvar Alterações</button>
            </form>

            <div class="products-section">
                <h3>Meus Itens</h3>

                @if (Model.Itens == null || !Model.Itens.Any())
                {
                    <div class="no-products">Você não tem nenhum item cadastrado.</div>
                }
                else
                {
                    <div class="products-grid">
                        @foreach (var item in Model.Itens)
                        {
                            <div class="product-card">
                                <img src="https://via.placeholder.com/300x140.png?text=Item+@item.Id" alt="Imagem do item">
                                <h4>@item.Titulo</h4>
                                <p>@(item.Descricao ?? "Sem descrição")</p>
                                <p><strong>Status:</strong> @(item.Status ? "Resolvido" : "Pendente")</p>
                                <p><strong>Data:</strong> @item.DataCriacao.ToLocalTime().ToString("dd/MM/yyyy")</p>
                                <a class="btn btn-primary" href="/Item/Details/@item.Id">Ver Detalhes</a>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>

    <script>
        function previewImage(input) {
            if (input.files && input.files[0]) {
                const file = input.files[0];
                if (!['image/jpeg','image/png'].includes(file.type)) {
                    alert('Apenas imagens JPEG ou PNG são permitidas.');
                    input.value = '';
                    return;
                }
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('FotoDePerfil').src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        }

        async function salvarPerfil() {
            const form = document.getElementById('formPerfil');
            const formData = new FormData(form);

            try {
                const response = await fetch('/Usuario/EditarPerfilAjax', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.sucesso) {
                    Swal.fire("Perfil atualizado com sucesso!");

                } else {
                    alert('Erro: ' + result.mensagem);
                }
            } catch (error) {
                console.error(error);
                alert('Ocorreu um erro ao salvar o perfil.');
            }
        }
    </script>
</body>
</html>
